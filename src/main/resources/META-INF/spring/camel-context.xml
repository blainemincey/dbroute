<?xml version="1.0" encoding="UTF-8"?>
<!-- Copyright 2005-2014 Red Hat, Inc. Red Hat licenses this file to you 
	under the Apache License, version 2.0 (the "License"); you may not use this 
	file except in compliance with the License. You may obtain a copy of the 
	License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by 
	applicable law or agreed to in writing, software distributed under the License 
	is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY 
	KIND, either express or implied. See the License for the specific language 
	governing permissions and limitations under the License. -->
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
       http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd">

	<!-- this is the JDBC data source which uses an in-memory only Apache Derby 
		database -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url" value="jdbc:mysql://localhost:3306/mycustomers" />
		<property name="username" value="root" />
		<property name="password" value="CHANGEME" />
	</bean>

	<!-- bean which creates/destroys the database table for this example -->
	<bean id="initDatabase" class="org.apache.camel.example.sql.DatabaseBean"
		init-method="create" destroy-method="destroy">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- configure the Camel SQL component to use the JDBC data source -->
	<bean id="sql" class="org.apache.camel.component.sql.SqlComponent">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- order bean is our business logic bean that creates new orders -->
	<bean id="orderBean" class="org.apache.camel.example.sql.OrderBean" />

	<!-- use Camel property placeholder loaded from the given file -->
	<camelContext xmlns="http://camel.apache.org/schema/spring">
		<propertyPlaceholder location="classpath:sql.properties"
			id="placeholder" />
		<route id="generateOrder-route">
			<from uri="timer:foo?period=5s" />
			<transform>
				<method ref="orderBean" method="generateOrder"></method>
			</transform>
			<to uri="sql:{{sql.insertOrder}}" />
			<log message="Inserted new order ${body[id]}" />
		</route>
		<route id="processOrder-route">
			<from uri="sql:{{sql.selectOrder}}?consumer.onConsume={{sql.markOrder}}" />
			<to uri="bean:orderBean?method=processOrder" />
			<log message="${body}" />
		</route>
	</camelContext>

</beans>
